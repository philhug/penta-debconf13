xml.div({:id=>:data}) do
  xml << js_tabs([:simple,:advanced])

  xml.fieldset(:id=>'content-simple') do
    xml.label(local('find person'))
    xml.form(:id=>:simple_search,:action=>url_for) do
      xml.input({:type=>:text,:name=>:search_person_simple,:id=>:search_person_simple,:value=>@preferences[:search_person_simple]})
      xml.label("Searching ...", {:id=>"search-indicator",:style=>"display:none"})
    end
  end

  xml.fieldset(:id=>'content-advanced') do
    xml.label(local('find person'))

    # template used for constructing advanced search rows
    xml.ul({:id=>:search_content,:style=>"display:none"}) do
      # search for name
      xml.li({:class=>:name,:title=>local(:name)}) do
        xml.input({:type=>:hidden,:name=>'search_person[row_id][key]',:value=>:name})
        xml.input({:type=>:text,:name=>'search_person[row_id][value]'})
      end
      # search for email
      xml.li({:class=>:email,:title=>local(:email)}) do
        xml.input({:type=>:hidden,:name=>'search_person[row_id][key]',:value=>:email})
        xml.input({:type=>:text,:name=>'search_person[row_id][value]'})
      end
      # search for event_role
      xml.li({:class=>:event_role,:title=>local(:event_role)}) do
        xml.input({:type=>:hidden,:name=>'search_person[row_id][key]',:value=>:event_role})
        xml << select_tag('search_person[row_id][value]', Event_role_localized.select({:translated=>@current_language}).map{|c| [c.event_role, c.name]})
      end
      # search for role
      xml.li({:class=>:role,:title=>local(:role)}) do
        xml.input({:type=>:hidden,:name=>'search_person[row_id][key]',:value=>:role})
        xml << select_tag('search_person[row_id][value]', Role_localized.select({:translated=>@current_language}).map{|c| [c.role, c.name]})
      end
      # search for conference
      xml.li({:class=>:conference_id,:title=>local(:conference)}) do
        xml.input({:type=>:hidden,:name=>'search_person[row_id][key]',:value=>:conference_id})
        xml << select_tag('search_person[row_id][value]', Conference.select.map{|c| [c.conference_id, c.acronym]})
      end
      # search for country
      xml.li({:class=>:country,:title=>local(:country)}) do
        xml.input({:type=>:hidden,:name=>'search_person[row_id][key]',:value=>:country})
        xml << select_tag('search_person[row_id][value]', Country_localized.select({:translated=>@current_language}).map{|c| [c.country, c.name]})
      end
      # search for arrived flag
      xml.li({:class=>:arrived,:title=>local(:arrived)}) do
        xml.input({:type=>:hidden,:name=>'search_person[row_id][key]',:value=>:arrived})
        xml << select_tag('search_person[row_id][value]', [['t','Yes'],['f','No']])
      end
      # search for attend flag
      xml.li({:class=>:attend,:title=>local(:attend)}) do
        xml.input({:type=>:hidden,:name=>'search_person[row_id][key]',:value=>:attend})
        xml << select_tag('search_person[row_id][value]', [['t','Yes'],['f','No']])
      end
      # search for reconfirmed flag
      xml.li({:class=>:reconfirmed,:title=>local('conference_person::reconfirmed')}) do
        xml.input({:type=>:hidden,:name=>'search_person[row_id][key]',:value=>:reconfirmed})
        xml << select_tag('search_person[row_id][value]', [['t','Yes'],['f','No']])
      end
      # search for accom
      xml.li({:class=>:accom,:title=>local(:accom)}) do
        xml.input({:type=>:hidden,:name=>'search_person[row_id][key]',:value=>:accom})
        xml << select_tag('search_person[row_id][value]', DebConf::Dc_accomodation.select.map{|c| [c.accom, c.accom]})
      end
      # search for debcamp
      xml.li({:class=>:debcamp_option,:title=>local(:debcamp)}) do
        xml.input({:type=>:hidden,:name=>'search_person[row_id][key]',:value=>:debcamp_option})
        xml << select_tag('search_person[row_id][value]', DebConf::Dc_debcamp.select.map{|c| [c.debcamp_option, c.debcamp_option]})
      end
      # search for person_type
      xml.li({:class=>:person_type,:title=>local('person_type (DebConf <= 11)')}) do
        xml.input({:type=>:hidden,:name=>'search_person[row_id][key]',:value=>:person_type})
        xml << select_tag('search_person[row_id][value]', DebConf::Dc_person_type.select.map{|c| [c.description, c.description]})
      end
      # search for debconf_role
      xml.li({:class=>:debconf_role,:title=>local('debconf_role (DebConf >= 12)')}) do
        xml.input({:type=>:hidden,:name=>'search_person[row_id][key]',:value=>:debconf_role})
        xml << select_tag('search_person[row_id][value]', DebConf::Dc_debconf_role.select.map{|c| [c.description, c.description]})
      end
      # search for debian_role
      xml.li({:class=>:debian_role,:title=>local('debian_role (DebConf >= 12)')}) do
        xml.input({:type=>:hidden,:name=>'search_person[row_id][key]',:value=>:debian_role})
        xml << select_tag('search_person[row_id][value]', DebConf::Dc_debian_role.select.map{|c| [c.description, c.description]})
      end
      # search for category
      xml.li({:class=>:participant_category,:title=>local(:participant_category)}) do
        xml.input({:type=>:hidden,:name=>'search_person[row_id][key]',:value=>:participant_category})
        xml << select_tag('search_person[row_id][value]', DebConf::Dc_participant_category.select.map{|c| [c.participant_category, c.participant_category]})
      end
      # search for food
      xml.li({:class=>:food,:title=>local(:food)}) do
        xml.input({:type=>:hidden,:name=>'search_person[row_id][key]',:value=>:food})
        xml << select_tag('search_person[row_id][value]', DebConf::Dc_food_preferences.select.map{|c| [c.food, c.food]})
      end
      # search for food_select
      xml.li({:class=>:food_select,:title=>local(:food_select)}) do
        xml.input({:type=>:hidden,:name=>'search_person[row_id][key]',:value=>:food_select})
        xml << select_tag('search_person[row_id][value]', DebConf::Dc_food_select.select.map{|c| [c.food_select, c.food_select]})
      end
      # swiss-only
      # search for camping flag
      xml.li({:class=>:camping,:title=>local(:camping)}) do
        xml.input({:type=>:hidden,:name=>'search_person[row_id][key]',:value=>:camping})
        xml << select_tag('search_person[row_id][value]', [['t','Yes'],['f','No']])
      end
      # search for debcampdc13 flag
      xml.li({:class=>:debcampdc13,:title=>local(:debcampdc13)}) do
        xml.input({:type=>:hidden,:name=>'search_person[row_id][key]',:value=>:debcampdc13})
        xml << select_tag('search_person[row_id][value]', [['t','Yes'],['f','No']])
      end

    end

    xml.ul({:id=>:search_template,:style=>"display:none"}) do
      xml.li do
        xml.img({:onclick=>'search_row_add(this)',:src=>'/images/icon-plus-16x16.png'})
        xml.img({:onclick=>'search_row_remove(this)',:src=>'/images/icon-minus-16x16.png'})
        xml.select(nil,{:onchange=>'search_row_change(this)'})
        xml.span(nil,:class=>:dynamic)
      end
    end

    xml.form(:id=>:advanced_search,:action=>url_for) do
      xml.ul( nil, {:id=>:advanced_search_list,:class=>"advanced_search"} )
      xml.label("Searching ...", {:id=>"search-indicator",:style=>"display:none"})
    end

  end

  xml.fieldset do
    xml.div({:id=>:results})
  end

end

xml.script(:type=>'text/javascript') do
  xml.text! "init_search_list('advanced_search_list');"
  if @preferences[:search_person_advanced] && @preferences[:search_person_advanced].length > 0
    @preferences[:search_person_advanced].each do | key, row |
      xml << js_function('search_row_add', nil, row[:key], row[:value])
    end
  else
    xml.text! "search_row_add();"
  end
  xml.text! <<-JS
    switch_tab();
    new Form.Observer('advanced_search', 1, function(element, value) { new Ajax.Updater('results', '#{url_for(:action=>:search_person_advanced)}', { asynchronous:true, evalScripts:false, onComplete:function(request){Element.hide('search-indicator');sortables_init()}, onLoading:function(request){Element.show('search-indicator')}, parameters:value });});
    new Form.Observer('simple_search', 1, function(element, value) { new Ajax.Updater('results', '#{url_for(:action=>:search_person_simple)}', { asynchronous:true, evalScripts:false, onComplete:function(request){Element.hide('search-indicator');sortables_init()}, onLoading:function(request){Element.show('search-indicator')}, parameters:value });});
    if ( $('content-simple').visible() )
      new Ajax.Updater('results', '#{url_for(:action=>:search_person_simple)}', { asynchronous:true, evalScripts:false, onComplete:function(request){Element.hide('search-indicator');sortables_init()}, onLoading:function(request){Element.show('search-indicator')},parameters:$('simple_search').serialize()});
    else
      new Ajax.Updater('results', '#{url_for(:action=>:search_person_advanced)}', { asynchronous:true, evalScripts:false, onComplete:function(request){Element.hide('search-indicator');sortables_init()}, onLoading:function(request){Element.show('search-indicator')},parameters:$('advanced_search').serialize()});

JS
end
